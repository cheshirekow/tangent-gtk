// Generated by gmmproc 2.56.0 -- DO NOT MODIFY!
#ifndef _TANGENT_GTKUTIL_MM_PANZOOMAREA_P_H
#define _TANGENT_GTKUTIL_MM_PANZOOMAREA_P_H

#include <gtkmm/private/drawingarea_p.h>
#include <tangent/gtkutil/mm/private/hack.h>

#include <glibmm/class.h>

namespace Gtk {

class PanZoomArea_Class : public Glib::Class {
 public:
#ifndef DOXYGEN_SHOULD_SKIP_THIS
  using CppObjectType = PanZoomArea;
  using BaseObjectType = GtkPanZoomArea;
  using BaseClassType = GtkPanZoomAreaClass;
  using CppClassParent = Gtk::DrawingArea_Class;
  using BaseClassParent = GtkDrawingAreaClass;

  friend class PanZoomArea;
#endif /* DOXYGEN_SHOULD_SKIP_THIS */

  const Glib::Class& init();

  static void class_init_function(void* g_class, void* class_data);

  static Glib::ObjectBase* wrap_new(GObject*);

 protected:
  // Callbacks (default signal handlers):
  // These will call the *_impl member methods, which will then call the
  // existing default signal callbacks, if any. You could prevent the original
  // default signal handlers being called by overriding the *_impl method.
  static gboolean area_motion_callback(GtkPanZoomArea* self,
                                       GdkEventMotion* p0);
  static gboolean area_button_callback(GtkPanZoomArea* self,
                                       GdkEventButton* p0);
  static gboolean area_draw_callback(GtkPanZoomArea* self, CairoContext* p0);

  // Callbacks (virtual functions):
};

}  // namespace Gtk

#endif /* _TANGENT_GTKUTIL_MM_PANZOOMAREA_P_H */
